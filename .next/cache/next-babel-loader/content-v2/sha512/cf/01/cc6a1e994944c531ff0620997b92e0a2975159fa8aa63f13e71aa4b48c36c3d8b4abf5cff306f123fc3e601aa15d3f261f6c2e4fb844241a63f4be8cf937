{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.detectLocaleCookie = detectLocaleCookie;\n\nfunction detectLocaleCookie(req, locales) {\n  if (req.headers.cookie && req.headers.cookie.includes('NEXT_LOCALE')) {\n    const {\n      NEXT_LOCALE\n    } = req.cookies;\n    return locales.find(locale => NEXT_LOCALE.toLowerCase() === locale.toLowerCase());\n  }\n}","map":{"version":3,"sources":["../../../../next-server/lib/i18n/detect-locale-cookie.ts"],"names":["req","locales","locale","NEXT_LOCALE"],"mappings":";;;;;AAEO,SAAA,kBAAA,CAAA,GAAA,EAAA,OAAA,EAAqE;AAC1E,MAAIA,GAAG,CAAHA,OAAAA,CAAAA,MAAAA,IAAsBA,GAAG,CAAHA,OAAAA,CAAAA,MAAAA,CAAAA,QAAAA,CAA1B,aAA0BA,CAA1B,EAAsE;AACpE,UAAM;AAAA,MAAA;AAAA,QAAmBA,GAAD,CAAxB,OAAA;AACA,WAAOC,OAAO,CAAPA,IAAAA,CACJC,MAAD,IAAoBC,WAAW,CAAXA,WAAAA,OAA8BD,MAAM,CAD1D,WACoDA,EAD7CD,CAAP;AAIH;AAAA","sourcesContent":["import { IncomingMessage } from 'http'\n\nexport function detectLocaleCookie(req: IncomingMessage, locales: string[]) {\n  if (req.headers.cookie && req.headers.cookie.includes('NEXT_LOCALE')) {\n    const { NEXT_LOCALE } = (req as any).cookies\n    return locales.find(\n      (locale: string) => NEXT_LOCALE.toLowerCase() === locale.toLowerCase()\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}